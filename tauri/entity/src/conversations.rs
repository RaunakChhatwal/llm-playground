//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "conversations")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))", unique)]
    pub uuid: Vec<u8>,
    pub last_updated: i64,
    #[sea_orm(unique)]
    pub first_exchange: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::exchanges::Entity",
        from = "Column::FirstExchange",
        to = "super::exchanges::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Exchanges,
}

impl Related<super::exchanges::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Exchanges.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
